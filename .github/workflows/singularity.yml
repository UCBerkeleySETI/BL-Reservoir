# This is a basic workflow to help you get started with Actions

name: singularity

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ peterma-dev ]
  pull_request:
    branches: [ peterma-dev ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-18.04


    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      # - uses: actions/checkout@v2
      # - name: Setup - gcloud / gsutil
      #   uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
      #   with:
      #     service_account_key: ${{ secrets.GCP_JSON_KEY }}
      #     project_id: breakthrough-listen-sandbox
      #     export_default_credentials: true

      - uses: actions/checkout@v1
      - uses: actions-hub/gcloud@master
        env:
          PROJECT_ID:  breakthrough-listen-sandbox
          APPLICATION_CREDENTIALS:  ${{ secrets.GCP_JSON_KEY }}
      # Runs a single command using the runners shell
      - name: checkout
        run: ls
      - name: DOCKER 
        run: |
              sudo apt-get remove docker docker-engine docker.io

              sudo apt-get install \
                  apt-transport-https \
                  ca-certificates \
                  curl \
                  software-properties-common
                  
              curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
              sudo apt-key fingerprint 0EBFCD88

              sudo add-apt-repository \
                "deb [arch=amd64] https://download.docker.com/linux/ubuntu \
                $(lsb_release -cs) \
                stable"

              sudo apt-get update
              sudo apt-get install docker-ce

      - name: NVIDIA-SETUP
        run: | 
            curl -s -L https://nvidia.github.io/nvidia-docker/gpgkey | \
            sudo apt-key add -
            distribution=$(. /etc/os-release;echo $ID$VERSION_ID)
            curl -s -L https://nvidia.github.io/nvidia-docker/$distribution/nvidia-docker.list | \
            sudo tee /etc/apt/sources.list.d/nvidia-docker.list
            sudo apt-get update

            sudo apt-get install -y nvidia-docker2
            sudo pkill -SIGHUP dockerd
      # - name: NVIDIA-SETUP
      #   run: curl -sL https://nvidia.github.io/nvidia-docker/gpgkey | sudo apt-key add -
      # - name: SETUP2
      #   run: distribution=$(. /etc/os-release;echo $ID$VERSION_ID)
      # - name: SETUP3
      #   run: curl -sL https://nvidia.github.io/nvidia-docker/$distribution/nvidia-docker.list | sudo tee /etc/apt/sources.list.d/nvidia-docker.list
      # - name: GET UPDATE
      #   run: sudo apt-get update

      # - name: NVIDIA-DOCKER 
      #   run: sudo apt-get install -y nvidia-docker2
      # - name: KILL
      #   run: sudo pkill -SIGHUP dockerd
        
      - name: RESTART
        run: sudo systemctl restart docker
      # - name: UPGRADE PYTHON 
      #   run: |
      #        python3 -V
      #        sudo apt install build-essential zlib1g-dev libncurses5-dev libgdbm-dev libnss3-dev libssl-dev libreadline-dev libffi-dev wget
      #        cd /tmp
      #        wget https://www.python.org/ftp/python/3.7.2/Python-3.7.2.tar.xz



      #        python3 -V

      - name: cd into dir and build
        run: cd temp_meerKAT_analysis & ls & sudo docker build -t peterma-dev_remote temp_meerKAT_analysis/.

      

      - name: save image
        run: sudo docker save -o peterma-dev_remote.tar peterma-dev_remote
      
      - name: upload image
        run: sudo gsutil cp peterma-dev_remote.tar  gs://deepseti/docker_img/peterma-dev_remote.tar
          
      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo done
